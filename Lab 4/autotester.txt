[bhatthit@remote ~]$ cd /u/d/bhatthit/ece244/lab4
[bhatthit@remote lab4]$ ~ece244i/public/exercise 4 Parser.exe
working dir: /u/course/ece244i/public//4

#############################################################
#############################################################
Running Testcase 1
#############################################################
#############################################################

Running the following input on your program:
=============================================================
group g1
group g2
group g3
group g4
shape s1 rectangle 10 10 20 20
shape s2 rectangle 1 3 4 5
shape s3 rectangle 117 1 0 10
shape s4 rectangle 1 9 0 1
shape s5 rectangle 10 10 20 2
shape c1 triangle 1 1 1 1
draw
move s1 g1
move s2 g1
move s3 g2
move s4 g2
move s5 g3
move c1 g3
shape f1 ellipse 1 3 1 100
move f1 g4
draw
delete g2
draw
/tmp/8WWQXk0REl/Parser.exe.bhatthit < ./1 > /tmp/8WWQXk0REl/bhatthit.out1 2> /tmp/8WWQXk0REl/bhatthit.err1
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> g1: group
> g2: group
> g3: group
> g4: group
> s1: rectangle 10 10 20 20
> s2: rectangle 1 3 4 5
> s3: rectangle 117 1 0 10
> s4: rectangle 1 9 0 1
> s5: rectangle 10 10 20 2
> c1: triangle 1 1 1 1
> drawing: 
pool:
s1: rectangle 10 10 20 20
s2: rectangle 1 3 4 5
s3: rectangle 117 1 0 10
s4: rectangle 1 9 0 1
s5: rectangle 10 10 20 2
c1: triangle 1 1 1 1
g1:
g2:
g3:
g4:
> moved s1 to g1
> moved s2 to g1
> moved s3 to g2
> moved s4 to g2
> moved s5 to g3
> moved c1 to g3
> f1: ellipse 1 3 1 100
> moved f1 to g4
> drawing: 
pool:
g1:
s1: rectangle 10 10 20 20
s2: rectangle 1 3 4 5
g2:
s3: rectangle 117 1 0 10
s4: rectangle 1 9 0 1
g3:
s5: rectangle 10 10 20 2
c1: triangle 1 1 1 1
g4:
f1: ellipse 1 3 1 100
> g2: deleted
> drawing: 
pool:
s3: rectangle 117 1 0 10
s4: rectangle 1 9 0 1
g1:
s1: rectangle 10 10 20 20
s2: rectangle 1 3 4 5
g3:
s5: rectangle 10 10 20 2
c1: triangle 1 1 1 1
g4:
f1: ellipse 1 3 1 100
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 1 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 2
#############################################################
#############################################################

Running the following input on your program:
=============================================================
group g1
group g2
group g3
shape s1 rectangle 10 10 20 20
shape s2 rectangle 1 3 4 5
shape s3 rectangle 117 1 0 10
shape s4 rectangle 1 9 0 1
shape s5 rectangle 10 10 20 2
shape c1 triangle 1 1 1 12
shape c2 triangle 12 1 11 1
shape c3 triangle 1 13 1 1
shape c4 triangle 1 1 14 11
draw
move s1 g1
move s2 g1
move s3 g1
move s4 g1
move s5 g1
move c1 g2
move c2 g2
move c3 g2
move c4 g2
draw
move s2 g2
move s4 g2
move c1 g1
draw
/tmp/8WWQXk0REl/Parser.exe.bhatthit < ./2 > /tmp/8WWQXk0REl/bhatthit.out2 2> /tmp/8WWQXk0REl/bhatthit.err2
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> g1: group
> g2: group
> g3: group
> s1: rectangle 10 10 20 20
> s2: rectangle 1 3 4 5
> s3: rectangle 117 1 0 10
> s4: rectangle 1 9 0 1
> s5: rectangle 10 10 20 2
> c1: triangle 1 1 1 12
> c2: triangle 12 1 11 1
> c3: triangle 1 13 1 1
> c4: triangle 1 1 14 11
> drawing: 
pool:
s1: rectangle 10 10 20 20
s2: rectangle 1 3 4 5
s3: rectangle 117 1 0 10
s4: rectangle 1 9 0 1
s5: rectangle 10 10 20 2
c1: triangle 1 1 1 12
c2: triangle 12 1 11 1
c3: triangle 1 13 1 1
c4: triangle 1 1 14 11
g1:
g2:
g3:
> moved s1 to g1
> moved s2 to g1
> moved s3 to g1
> moved s4 to g1
> moved s5 to g1
> moved c1 to g2
> moved c2 to g2
> moved c3 to g2
> moved c4 to g2
> drawing: 
pool:
g1:
s1: rectangle 10 10 20 20
s2: rectangle 1 3 4 5
s3: rectangle 117 1 0 10
s4: rectangle 1 9 0 1
s5: rectangle 10 10 20 2
g2:
c1: triangle 1 1 1 12
c2: triangle 12 1 11 1
c3: triangle 1 13 1 1
c4: triangle 1 1 14 11
g3:
> moved s2 to g2
> moved s4 to g2
> moved c1 to g1
> drawing: 
pool:
g1:
s1: rectangle 10 10 20 20
s3: rectangle 117 1 0 10
s5: rectangle 10 10 20 2
c1: triangle 1 1 1 12
g2:
c2: triangle 12 1 11 1
c3: triangle 1 13 1 1
c4: triangle 1 1 14 11
s2: rectangle 1 3 4 5
s4: rectangle 1 9 0 1
g3:
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 2 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 3
#############################################################
#############################################################

Running the following input on your program:
=============================================================
group pool
delete pool
group Pool
group g1
delete g1
group g1
shape g1 triangle 1 1 3 3
draw
/tmp/8WWQXk0REl/Parser.exe.bhatthit < ./3 > /tmp/8WWQXk0REl/bhatthit.out3 2> /tmp/8WWQXk0REl/bhatthit.err3
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> Error: invalid name
pool: group
> Error: invalid name
pool: deleted
> Pool: group
> g1: group
> g1: deleted
> g1: group
> Error: name g1 exists
g1: triangle 1 1 3 3
> drawing: 
pool:
Pool:
g1: triangle 1 1 3 3
g1:
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>


Output did not match the solution
The following output would have been accepted:


Solution output:
=============================================================
> error: invalid name
> error: invalid name
> Pool: group 
> g1: group 
> g1: deleted 
> g1: group 
> error: name g1 exists
> drawing:
pool:
Pool:
g1:
> 
-------------------------------------------------------------
Running diff on program output and solution output
( < actual output vs > expected output )
=============================================================
1,4c1,2
< > Error: invalid name
< pool: group
< > Error: invalid name
< pool: deleted
---
> > error: invalid name
> > error: invalid name
9,10c7
< > Error: name g1 exists
< g1: triangle 1 1 3 3
---
> > error: name g1 exists
14d10
< g1: triangle 1 1 3 3
-------------------------------------------------------------

Running valgrind to check for memory leaks
==2355347==    definitely lost: 16 bytes in 1 blocks

############### Testcase 3 Results ##########################
Functionality: FAIL - Output did not match solution
Valgrind:      FAIL - detected memory leaks!

#############################################################
#############################################################
Running Testcase 4
#############################################################
#############################################################

Running the following input on your program:
=============================================================
shape s1 triangle 3 3 2 2
group mygroup
shape s2 ellipse 4 1 3 2
shape s3 ellipse 9 1 9 3
group mynewgroup
draw
shape s4 rectangle 1 1 30 30
shape s5 rectangle 9 1 3 1
shape s6 ellipse 90 90 100 100
draw
move s4 mygroup
move s5 mygroup
move s6 mygroup
draw
delete mygroup
move s4 mynewgroup
draw
delete s4
/tmp/8WWQXk0REl/Parser.exe.bhatthit < ./4 > /tmp/8WWQXk0REl/bhatthit.out4 2> /tmp/8WWQXk0REl/bhatthit.err4
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> s1: triangle 3 3 2 2
> mygroup: group
> s2: ellipse 4 1 3 2
> s3: ellipse 9 1 9 3
> mynewgroup: group
> drawing: 
pool:
s1: triangle 3 3 2 2
s2: ellipse 4 1 3 2
s3: ellipse 9 1 9 3
mygroup:
mynewgroup:
> s4: rectangle 1 1 30 30
> s5: rectangle 9 1 3 1
> s6: ellipse 90 90 100 100
> drawing: 
pool:
s1: triangle 3 3 2 2
s2: ellipse 4 1 3 2
s3: ellipse 9 1 9 3
s4: rectangle 1 1 30 30
s5: rectangle 9 1 3 1
s6: ellipse 90 90 100 100
mygroup:
mynewgroup:
> moved s4 to mygroup
> moved s5 to mygroup
> moved s6 to mygroup
> drawing: 
pool:
s1: triangle 3 3 2 2
s2: ellipse 4 1 3 2
s3: ellipse 9 1 9 3
mygroup:
s4: rectangle 1 1 30 30
s5: rectangle 9 1 3 1
s6: ellipse 90 90 100 100
mynewgroup:
> mygroup: deleted
> moved s4 to mynewgroup
> drawing: 
pool:
s1: triangle 3 3 2 2
s2: ellipse 4 1 3 2
s3: ellipse 9 1 9 3
s5: rectangle 9 1 3 1
s6: ellipse 90 90 100 100
mynewgroup:
s4: rectangle 1 1 30 30
> s4: deleted
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 4 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 5
#############################################################
#############################################################

Running the following input on your program:
=============================================================
group g1
group g2
draw
shape s1 rectangle 10 10 20 20
shape s2 rectangle 1 3 4 5
shape s3 rectangle 117 1 0 10
shape s4 rectangle 1 9 0 1
shape s5 rectangle 10 10 20 2
shape c1 triangle 1 1 1 1
draw
move s1 g1
move s2 g1
move s3 g1
move s4 g1
move s5 g1
move c1 g2
draw
delete s1
delete c1
shape c2 rectangle 9 1 2 3
move c2 g2
draw
/tmp/8WWQXk0REl/Parser.exe.bhatthit < ./5 > /tmp/8WWQXk0REl/bhatthit.out5 2> /tmp/8WWQXk0REl/bhatthit.err5
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> g1: group
> g2: group
> drawing: 
pool:
g1:
g2:
> s1: rectangle 10 10 20 20
> s2: rectangle 1 3 4 5
> s3: rectangle 117 1 0 10
> s4: rectangle 1 9 0 1
> s5: rectangle 10 10 20 2
> c1: triangle 1 1 1 1
> drawing: 
pool:
s1: rectangle 10 10 20 20
s2: rectangle 1 3 4 5
s3: rectangle 117 1 0 10
s4: rectangle 1 9 0 1
s5: rectangle 10 10 20 2
c1: triangle 1 1 1 1
g1:
g2:
> moved s1 to g1
> moved s2 to g1
> moved s3 to g1
> moved s4 to g1
> moved s5 to g1
> moved c1 to g2
> drawing: 
pool:
g1:
s1: rectangle 10 10 20 20
s2: rectangle 1 3 4 5
s3: rectangle 117 1 0 10
s4: rectangle 1 9 0 1
s5: rectangle 10 10 20 2
g2:
c1: triangle 1 1 1 1
> s1: deleted
> c1: deleted
> c2: rectangle 9 1 2 3
> moved c2 to g2
> drawing: 
pool:
g1:
s2: rectangle 1 3 4 5
s3: rectangle 117 1 0 10
s4: rectangle 1 9 0 1
s5: rectangle 10 10 20 2
g2:
c2: rectangle 9 1 2 3
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 5 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected

#############################################################
#############################################################
Running Testcase 6
#############################################################
#############################################################

Running the following input on your program:
=============================================================
group g1
group g2
draw
shape s1 rectangle 10 10 20 20
shape s2 rectangle 1 3 4 5
shape s3 rectangle 117 1 0 10
shape s4 rectangle 1 9 0 1
shape s5 rectangle 10 10 20 2
shape c1 triangle 1 1 1 1
draw
move s1 g1
move s2 g1
move s3 g1
move s4 g1
move s5 g1
move c1 g2
draw
delete s5
shape s6 triangle 1 3 4 1
move s6 g1
draw
/tmp/8WWQXk0REl/Parser.exe.bhatthit < ./6 > /tmp/8WWQXk0REl/bhatthit.out6 2> /tmp/8WWQXk0REl/bhatthit.err6
-------------------------------------------------------------

Your program produced the following output:
=============================================================
> g1: group
> g2: group
> drawing: 
pool:
g1:
g2:
> s1: rectangle 10 10 20 20
> s2: rectangle 1 3 4 5
> s3: rectangle 117 1 0 10
> s4: rectangle 1 9 0 1
> s5: rectangle 10 10 20 2
> c1: triangle 1 1 1 1
> drawing: 
pool:
s1: rectangle 10 10 20 20
s2: rectangle 1 3 4 5
s3: rectangle 117 1 0 10
s4: rectangle 1 9 0 1
s5: rectangle 10 10 20 2
c1: triangle 1 1 1 1
g1:
g2:
> moved s1 to g1
> moved s2 to g1
> moved s3 to g1
> moved s4 to g1
> moved s5 to g1
> moved c1 to g2
> drawing: 
pool:
g1:
s1: rectangle 10 10 20 20
s2: rectangle 1 3 4 5
s3: rectangle 117 1 0 10
s4: rectangle 1 9 0 1
s5: rectangle 10 10 20 2
g2:
c1: triangle 1 1 1 1
> s5: deleted
> s6: triangle 1 3 4 1
> moved s6 to g1
> drawing: 
pool:
g1:
s1: rectangle 10 10 20 20
s2: rectangle 1 3 4 5
s3: rectangle 117 1 0 10
s4: rectangle 1 9 0 1
s6: triangle 1 3 4 1
g2:
c1: triangle 1 1 1 1
> 
-------------------------------------------------------------

<<<<<<<<< Comparing output to solution >>>>>>>>>>>>

Running valgrind to check for memory leaks

############### Testcase 6 Results ##########################
Functionality: PASS - Output matches solution
Valgrind:      PASS - No memory leaks detected


#############################################################
################# Summary for 6 test(s) #####################
#############################################################

Functionality: FAIL: 1 test(s) failed!
Valgrind:      FAIL: 1 test(s) had memory leaks! Run valgrind for a detailed report

#############################################################
#############################################################
#############################################################

